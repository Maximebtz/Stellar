{% extends 'base.html.twig' %}

{% block title %}Stellar Accueil{% endblock %}
{% block stylesheets %}
<link rel="stylesheet" href="{{ asset('build/style.css') }}" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css" type="text/css"
    media="all" />
<script>
    // Initialize and add the map
    let map;

    async function initMap() {
        // The location of the init map
        const position = { lat: 40.7142700, lng: -74.0059700 };
        // Request needed libraries.
        const { Map } = await google.maps.importLibrary("maps");
        // Librairie pour modifier les marqueurs
        const { AdvancedMarkerView } = await google.maps.importLibrary("marker");
        const infoWindow = new google.maps.InfoWindow();

        // Nouvelle map est ses spécificités
        map = new Map(document.getElementById("map"), {
            zoom: 3,
            minZoom: 3,
            center: position,
            mapId: "DEMO_MAP_ID",
            gestureHandling: "greedy",
        });

        // Loop through your adverts and add markers for each one
        {% for advert in adverts %}
        (function () {


            let geocoder = new google.maps.Geocoder();
            // Déclaration de l'adresse 
            let address = "{{ advert.address }}, {{ advert.city }}, {{ advert.cp }}, {{ advert.country }}";
            let title = "{{ advert.title }}";
            {% if advert.images is not empty %}
                let imgSrc = "{{ asset('uploads/adverts/' ~ advert.images[0].url ~ '') }}";
            {% else %}
                let imgSrc = "";
            {% endif %}
            let detailURL = "{{ path('detail_advert', {'slug': advert.slug, 'id': advert.id}) }}";
            let price = "{{ advert.price }}";

            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status === 'OK') {
                    let location = results[0].geometry.location;
                    let lat = location.lat();
                    let lng = location.lng();

                    // Créez un marqueur pour chaque annonce
                    let marker = new google.maps.Marker({
                        position: { lat: lat, lng: lng },
                        map: map,
                        title: title,
                        label: {
                            text: price + "€",
                            className: "custom-price-label"

                        },
                        cursor: "pointer"
                    });

                    let closeInfoWindowTimer;

                    // Ouverture de l'InfoWindow lors du survol du marqueur
                    marker.addListener('mouseover', function () {
                        const contentString = `
                                <div class="map-popup-container" id="map-popup-container">
                                    <img src="${imgSrc}" alt="{{ advert.title }}" width="50" height="50">
                                    <div id="infoWindowContent">
                                        <h4>{{ advert.title }}</h4>
                                    </div>
                                </div>`;
                        infoWindow.setContent(contentString);
                        infoWindow.open(map, marker);

                        // Écouteur d'événements pour quand l'InfoWindow est prêt
                        google.maps.event.addListenerOnce(infoWindow, 'domready', function () {
                            // Récupérer l'élément DOM de l'InfoWindow
                            const iwOuter = document.getElementById('map-popup-container');

                            // Empêcher la fermeture lorsqu'on survole l'InfoWindow
                            iwOuter.addEventListener('mouseover', function () {
                                clearTimeout(closeInfoWindowTimer);
                            });

                            // Activer la fermeture lorsqu'on quitte l'InfoWindow
                            iwOuter.addEventListener('mouseout', function () {
                                closeInfoWindowTimer = setTimeout(() => {
                                    infoWindow.close();
                                }, 100); // fermer après 100 ms, à ajuster selon vos besoins
                            });
                        });
                    });
                    // Programmation de la fermeture de l'InfoWindow lorsqu'on quitte le marqueur
                    marker.addListener('mouseout', function () {
                        closeInfoWindowTimer = setTimeout(() => {
                            infoWindow.close();
                        }, 100);
                    });
                    // Annulation de la fermeture de l'InfoWindow lorsqu'on survole à nouveau le marqueur
                    marker.addListener('mouseover', function () {
                        clearTimeout(closeInfoWindowTimer);
                    });

                    // Rendre le marqueur cliquable
                    marker.addListener('click', function () {
                        window.location.href = detailURL;
                    });

                } else {
                    console.error('Erreur de géocodage pour l\'annonce "' + title + '": ' + status);
                }
            });
        })();
        {% endfor %}
    }
</script>
<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDKMfraFkzITgdFU4n3x1xu451mtxmGI8E&callback=initMap"></script>
{% endblock %}
{% block body %}
<div id="loading-screen" style="position: fixed; top: 0; width: 100%; height: 100%; z-index: 9999;">
    <object id="my-svg" aria-label="animation d'entrée" class="hidden" type="image/svg+xml" data="{{asset('img/Untitled.svg')}}"></object>
</div>
<div class="wrapper">
    <div class="wrapper-home">

        <section class="container">
            <div class="title">

                <h1>
                    <a href="https://www.jepense.org/ataraxie-definition-philosophique/" target="_blank">Stellar</a> 
                    <svg width="74" height="87" viewBox="0 0 74 87" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14.1512 65.2184C-9.08894 87.6165 15.8353 45.0096 27.7921 35.9156C24.4801 35.9156 15.3637 34.6694 5.39404 29.6846C-4.57564 24.6997 5.39404 23.4535 11.6251 23.4535C20.9997 24.5201 39.008 25.3397 36.0441 20.0854C32.3391 13.5175 36.8861 9.30733 44.8012 2.57106C52.7164 -4.16521 66.8625 7.96008 68.8834 20.0854C70.5001 29.7856 59.3404 30.5266 53.5584 29.6846L60.9683 40.4626C66.7503 47.9286 76.9333 63.3322 71.4095 65.2184C65.8858 67.1045 55.1863 53.879 50.5271 47.0305C49.7412 53.0931 46.4853 68.3171 39.749 80.7118C33.0128 93.1066 32.5637 82.1713 33.1812 75.1544C34.5846 64.3764 32.7433 47.2999 14.1512 65.2184Z" stroke="black"/>
                        <line x1="46.9943" y1="7.16519" x2="49.0152" y2="15.2487" stroke="black"/>
                        <line x1="43.3448" y1="11.7497" x2="51.4762" y2="9.93089" stroke="black"/>
                        <line x1="58.446" y1="16.9328" x2="60.4669" y2="25.0163" stroke="black"/>
                        <line x1="54.7965" y1="21.5172" x2="62.9279" y2="19.6985" stroke="black"/>
                        <path d="M48.0062 22.7799C48.0062 23.1699 47.9104 23.4988 47.7815 23.7134C47.6467 23.9381 47.5302 23.9639 47.4958 23.9639C47.4614 23.9639 47.3448 23.9381 47.21 23.7134C47.0812 23.4988 46.9854 23.1699 46.9854 22.7799C46.9854 22.3899 47.0812 22.061 47.21 21.8463C47.3448 21.6217 47.4614 21.5958 47.4958 21.5958C47.5302 21.5958 47.6467 21.6217 47.7815 21.8463C47.9104 22.061 48.0062 22.3899 48.0062 22.7799Z" stroke="black"/>
                    </svg>
                </h1>
                
                    
                <q>
                    Trouvez un hébergement atypique avec <span>Stellar</span> ! <br>
                    C'est ici que l'aventure commence !
                </q>
                <div class="avis-wrap">
                    <div class="avis-container">
                        <div class="avis">
                            <h4>Caroline M.</h4>
                            <span class="date-avis">12 Mars 2023</span>
                            <q>Un service client au top, toujours disponible quand j'en ai besoin!</q>
                        </div>
                        <div class="avis">
                            <h4>François G.</h4>
                            <span class="date-avis">20 Avril 2023</span>
                            <q>La réservation a été simple et rapide, expérience utilisateur impeccable.</q>
                        </div>
                        <div class="avis">
                            <h4>Laura S.</h4>
                            <span class="date-avis">5 Mai 2023</span>
                            <q>J'ai adoré la facilité d'utilisation du site, tout est bien pensé et intuitif.</q>
                        </div>
                        <div class="avis">
                            <h4>Caroline M.</h4>
                            <span class="date-avis">12 Mars 2023</span>
                            <q>Un service client au top, toujours disponible quand j'en ai besoin!</q>
                        </div>
                        <div class="avis">
                            <h4>François G.</h4>
                            <span class="date-avis">20 Avril 2023</span>
                            <q>La réservation a été simple et rapide, expérience utilisateur impeccable.</q>
                        </div>
                        <div class="avis">
                            <h4>Laura S.</h4>
                            <span class="date-avis">5 Mai 2023</span>
                            <q>J'ai adoré la facilité d'utilisation du site, tout est bien pensé et intuitif.</q>
                        </div>
                    </div>
                </div>
            </div>

            <svg width="513" height="701" viewBox="0 0 513 701" fill="none" xmlns="http://www.w3.org/2000/svg">
                <defs>
                    <clipPath id="shapeClip">
                        <rect id="rect1" class="rect-animation" x="14.5537" y="189.038" width="266.81" height="177.873"
                            rx="7" transform="rotate(-45 14.5537 189.038)" />
                        <rect id="rect2" class="rect-animation" x="166.066" y="574.6" width="266.81" height="177.873"
                            rx="7" transform="rotate(-45 166.066 574.6)" />
                        <rect id="rect3" class="rect-animation" x="0.544922" y="471.584" width="266.81" height="177.873"
                            rx="7" transform="rotate(-45 0.544922 471.584)" />
                        <rect id="rect4" class="rect-animation" x="197.7" y="274.429" width="266.81" height="177.873"
                            rx="7" transform="rotate(-45 197.7 274.429)" />
                    </clipPath>
                </defs>
                <image xlink:href="{{asset('img/illustrations/loginbackground.png')}}" x="-500" height="701"
                    clip-path="url(#shapeClip)" preserveAspectRatio="xMaxYMax slice" />
            </svg>
        </section>

        <div class="search-btn-container">
            <div id="searchButton">
                <span>Cliquez ici pour filtrer</span>
                <img src="{{ asset('img/icons/Tune.svg')}}" alt="Filters Icon">
            </div>

            <div id="searchPopup" style="display:none;">
                <h3>Filtres de recherche</h3>
                <div class="filters-container">
                    <div class="filters">
                        <div class="filter">
                            <label>Villes</label>
                            <input type="text" id="cityInput" placeholder="Tapez et appuyez sur Entrée">
                            <div id="cityTags" class="labels"></div>
                        </div>
                        <div class="filter">
                            <label>Pays</label>
                            <input type="text" id="countryInput" placeholder="Tapez et appuyez sur Entrée">
                            <div id="countryTags" class="labels"></div>
                        </div>
                    </div>
                    <div class="filters">
                        <div class="filter">
                            <div class="price-filter-input">
                                <div class="price-filter-input-content">
                                    <label for="minPrice">Prix Min</label>
                                    <input type="number" min="0" max="9900" oninput="validity.valid||(value='0');"
                                        id="minPrice" name="minPrice" class="price-range-field" />
                                </div>
                                <div class="price-filter-input-content">
                                    <label for="maxPrice">Prix Max</label>
                                    <input type="number" min="0" max="10000" oninput="validity.valid||(value='10000');"
                                        id="maxPrice" name="maxPrice" class="price-range-field" />
                                </div>
                            </div>
                            <div id="rangePrice" class="price-filter-range" name="rangePrice"></div>
                        </div>
                    </div>
                    <div class="filters">
                        <div class="filter">
                            <label>Date d'arrivée</label>
                            <input type="date" id="startDate">
                        </div>
                        <div class="filter">
                            <label>Date de départ</label>
                            <input type="date" id="endDate">
                        </div>
                    </div>
                </div>
                <button id="apply-filter-btn" class="l-btn">Appliquer les filtres</button>
            </div>
        </div>
        <div class="adverts-container">
            <div id="grid" class="advert-card-list">
                {% for advert in adverts %}
                <div class="advert-card slide-in">

                    <a href="{{ path('detail_advert', {'slug': advert.slug, 'id': advert.id})}}"

                    
                        class="clickable-card card-click">

                        <figure>
                            {% if advert.images is not empty %}
                            <img src="{{ asset('uploads/adverts/' ~ advert.images[0].url) }}"
                                alt="image de l'annonce : {{ advert.title }}">
                            {% endif %}
                        </figure>
                        
                        <div class="card-content">
                            <h3 class="card-title">{{ advert.title}}</h3>
                            <p class="card-text">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                    class="bi bi-geo-alt-fill" viewBox="0 0 16 16">
                                    <path
                                        d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z" />
                                </svg>
                                {{ advert.city }},
                                {{ advert.country }}
                            </p>
                            <p class="card-text">
                                <span class="price-card">{{ advert.price }}€</span>/nuit
                            </p>
                        </div>
                    </a>
                </div>
                {% endfor %}
            </div>
            <div class="pagination">
                {% for pageNumber in 1..totalPages %}
                <a href="{{ path(app.request.attributes.get('_route'), {'page': pageNumber}) }}"
                    class="{{ pageNumber == page ? 'active' : 'pages' }}">{{ pageNumber }}</a>
                {% endfor %}
            </div>
        </div>
        </section>
        <div class="map-popup-container" id="map-popup-container">

        </div>
        <div class="map">
            <div id="map"></div>
        </div>
    </div>
</div>
{% endblock %}
{% block javascripts %}
<script defer src="{{ asset('/js/filter.js') }}"></script>
<script src="{{ asset('/js/app.js') }}"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" type="text/javascript"></script>
<script src="{{ asset('/js/animations.js') }}"></script>
<script src="{{ asset('/js/arrivalAnimation.js') }}"></script>
<script src="{{ asset('/tarteaucitron/tarteaucitron.js')}}"></script>
<script src="{{ asset('/tarteaucitron/tarteaucitron.mod.js')}}"></script>
<script>
    const userId = `{% if app.user %}'{{ app.user.id }}'{% else %}null{% endif %}`;  // Récupère l'ID de l'utilisateur connecté
</script>
{% endblock javascripts %}